@page "/ingreso-libros"
@inject HttpClient http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager

<h3>Biblioteca</h3>

<EditForm Model="@electronicos" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="Titulo">Ingrese Titulo:</label>
        <InputText id="Titulo" @bind-Value="electronicos.Titulo" class="form-control" />
        <ValidationMessage For="() => electronicos.Titulo" />
    </div>
    <div class="form-group">
        <label for="Autor">Ingrese Autor:</label>
        <InputText id="Autor" @bind-Value="electronicos.Autor" class="form-control" />
        <ValidationMessage For="() => electronicos.Autor" />
    </div>
    <div class="form-group">
        <label for="Genero">Ingrese Genero:</label>
        <InputText id="Genero" @bind-Value="electronicos.Genero" class="form-control" />
        <ValidationMessage For="() => electronicos.Genero" />
    </div>
    <div class="form-group">
        <label for="Publicacion">Ingrese Publicacion:</label>
        <InputNumber id="Publicaion" @bind-Value="electronicos.Publicacion" class="form-control" />
        <ValidationMessage For="() => electronicos.Publicacion" />
    </div>
    <div class="form-group">
        <label for="Formato">Ingrese Formato:</label>
        <InputText id="Formato" @bind-Value="electronicos.Formato" class="form-control" />
        <ValidationMessage For="() => electronicos.Formato" />
    </div>
    <div class="form-group">
        <label for="Tamanio">Ingrese Tamanio:</label>
        <InputText id="Tamanio" @bind-Value="electronicos.Tamanio" class="form-control" />
        <ValidationMessage For="() => electronicos.Tamanio" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Guardar</button>
    </div>
</EditForm>

@if (electronicos != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Titulo</th>
                <th>Autor</th>
                <th>Genero</th>
                <th>Publicacion</th>
                <th>Formato</th>
                <th>Tamanio</th>
                <th>Editar</th>
                <th>Borrar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var electronico in elec)
            {
                <tr>
                    <td>@electronico.Titulo</td>
                    <td>@electronico.Autor</td>
                    <td>@electronico.Genero</td>
                    <td>@electronico.Publicacion</td>
                    <td>@electronico.Formato</td>
                    <td>@electronico.Tamanio</td>
                    <button class="btn btn-warning"
                            @onclick="@(() =>NavigationManager.NavigateTo($"/edicion/{electronico.Tamanio}"))">
                        Editar
                    </button>
                    <td><button class="btn btn-danger" @onclick="@(()=>Borrar(electronico.Tamanio))">Submit</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Electronicos electronicos = new Electronicos();
    List<Electronicos> elec = new List<Electronicos>();
    protected async Task Guardar()
    {
        elec.Add(electronicos);
        electronicos = new Electronicos();
        await localStorage.SetItemAsync("electronicos", elec);
    }
    protected override async Task OnInitializedAsync()
    {
        //elec = await localStorage.GetItemAsync<List<Electronicos>>("electronicos");
    }

    protected async Task Borrar(string Tamanio)
    {
        Electronicos productoBorrar = elec.Find(c => c.Tamanio == Tamanio);
        elec.Remove(productoBorrar);
        await localStorage.SetItemAsync("electronicos", elec);
    }
}
